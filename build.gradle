plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'mju.iphak'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


// Jacoco 설정
jacoco {
    toolVersion = "0.8.11"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "mju/iphak/maru_egg/common/**",
                    "mju/iphak/maru_egg/*Request*",
                    "mju/iphak/maru_egg/*Command*",
                    "mju/iphak/maru_egg/*Response*",
                    "mju/iphak/maru_egg/*Mapper*"
            ])
        }))
    }
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.4.0'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.5.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // 직렬화
    implementation 'com.google.code.gson:gson:2.11.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'

    // WebClient Mock Test
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.2"
    testImplementation "io.projectreactor:reactor-test"

    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'org.testcontainers:jdbc:1.19.7'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //QueryDsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // open korean text
    implementation 'org.openkoreantext:open-korean-text:2.1.0'

    // Apache Commons Lang의 LevenshteinDistance
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.10.0'

    // NLP
    implementation 'org.apache.lucene:lucene-core:6.6.1'
    implementation 'org.apache.lucene:lucene-analyzers-common:6.6.1'

    // jwt
    implementation 'com.auth0:java-jwt:3.4.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}
