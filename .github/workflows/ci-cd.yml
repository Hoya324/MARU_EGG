name: MARU EGG CI-CD Workflow

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches:
      - develop

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 환경별 yml 파일 생성 - dev
      - name: make application-dev.yml
        if: contains(github.ref, 'develop')
        run: |
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.YML_DEV }}" > ./application-dev.yml
        shell: bash

      # gradle build
      - name: Build with Gradle
        run: ./gradlew build -x test

      # Check if the JAR file exists
      - name: Check JAR file exists
        run: ls -al build/libs

      # Upload JAR file as artifact
      - name: Upload JAR file
        uses: actions/upload-artifact@v3
        with:
          name: maru-egg-be-jar
          path: build/libs/*.jar

  CD:
    runs-on: ubuntu-latest

    needs: CI

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Download JAR file from artifact
      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: maru-egg-be-jar
          path: build/libs

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Metadata action
      - name: Metadata action
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REPO }}

      # Build and push Docker image
      - name: Build and push Docker image
        if: contains(github.ref, 'develop')
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ github.run_number }}
          labels: ${{ steps.meta.outputs.labels }}

      ## deploy to develop
      - name: Deploy to EC2 dev
        uses: appleboy/ssh-action@master
        if: contains(github.ref, 'develop')
        with:
          host: ${{ secrets.PUBLIC_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PEM_KEY }}
          script: |
            docker pull ${{ steps.meta.outputs.tags }}-${{ github.run_number }}
            docker stop maru_egg
            docker rm maru_egg
            docker run --restart always -d -p 80:8080 --name maru_egg ${{ steps.meta.outputs.tags }}-${{ github.run_number }}