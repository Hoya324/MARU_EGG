name: MARU EGG CI-CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # gradlew의 권한을 변경
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle caching
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        # Gradle 패키지 캐싱 단계 - Gradle 캐시를 사용하여 빌드 시간을 단축합니다.

      # Build with Gradle
      - name: Build with Gradle
        run: |
          ./gradlew assemble
        # Gradle로 프로젝트 빌드 단계 - ./gradlew assemble 명령어로 프로젝트를 빌드하여 JAR 파일을 생성합니다.

      # Check if the JAR file exists
      - name: Check JAR file exists
        run: ls -al build/libs

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Metadata action
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REPO }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ github.run_number }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUBLIC_DNS }}
          username: ubuntu
          key: ${{ secrets.PEM_KEY }}
          script: |
            docker pull $-$
            docker stop maru_egg
            docker rm maru_egg
            docker run --restart always -d -p 80:8080 --name maru_egg $-$
