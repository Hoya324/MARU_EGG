name: MARU EGG CI-CD Workflow

on:
  push:
    branches:
      - main

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup Java JDK
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Cache Gradle packages
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # Build Docker image
      - name: Build docker image
        run: docker build -t ${{ secrets.DOCKER_REPO }} .

      # Build with Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # Check if the JAR file exists
      - name: Check JAR file exists
        run: ls -al build/libs

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      #      # Metadata action
      #      - name: Metadata action
      #        id: meta
      #        uses: docker/metadata-action@v4
      #        with:
      #          images: ${{ secrets.DOCKER_REPO }}

      # Push Docker image
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKER_REPO }}
  
  CD:
    runs-on: ubuntu-latest

    needs: build

    steps:
      # Deploy to EC2 using SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PUBLIC_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PEM_KEY }}
          script: |
            ssh-keyscan -H ${{ secrets.PUBLIC_DNS }} >> ~/.ssh/known_hosts
            docker pull ${{ steps.meta.outputs.tags }}-${{ github.run_number }}
            docker stop maru_egg || true
            docker rm maru_egg || true
            docker run --restart always -d -p 80:8080 --name maru_egg ${{ steps.meta.outputs.tags }}-${{ github.run_number }}