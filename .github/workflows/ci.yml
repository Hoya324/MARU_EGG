name: MARU EGG CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # build
      - name: Setup Java JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 환경별 yml 파일 생성(1) - application.yml
      - name: make application.yml
        if: |
          contains(github.ref, 'main') ||
          contains(github.ref, 'develop')
        run: |
          mkdir -p ./src/main/resources # resources 폴더 생성, 존재하면 생략
          cd ./src/main/resources # resources 폴더로 이동
          touch ./application.yml # application.yml 생성
          echo "${{ secrets.YML }}" > ./application.yml # github actions에서 설정한 값을 application.yml 파일에 쓰기
        shell: bash

      # 환경별 yml 파일 생성(2) - dev
      - name: make application-dev.yml
        if: contains(github.ref, 'develop')
        run: |
          mkdir -p ./src/main/resources # ensure resources 폴더 exists
          cd ./src/main/resources
          touch ./application-dev.yml
          echo "${{ secrets.YML_DEV }}" > ./application-dev.yml
        shell: bash

      #      TODO: 환경별 yml 파일 생성(3) - prod
      #      - name: make application-prod.yml
      #        if: contains(github.ref, 'main')
      #        run: |
      #          cd ./src/main/resources
      #          touch ./application-prod.yml
      #          echo "${{ secrets.YML_PROD }}" > ./application-prod.yml
      #        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      # docker push
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${ steps.meta.outputs.tags }-${ steps.date.outputs.date }
          labels: ${ steps.meta.outputs.labels }

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${ secrets.PUBLIC_DNS }
          username: ubuntu
          key: ${ secrets.PEM_KEY }
          script: |
            touch hello.txt
            echo "hello world" > hello.txt
